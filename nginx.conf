# DEV
# What this does:
# Listens on port 80 on your local machine.
# Routes / to frontend:80.
# Routes /api/ to backend:8080.
# Routes /oauth2/ to backend:8080/oauth2

# server name = localhost
# Frontend: http://localhost
# Backend: http://localhost/api/some-endpoint → This will be proxied to http://backend:8080/some-endpoint
#   Do not use http://backend:8080/some-endpoint in the frontend code, because the
#   frontend runs in the browser, which cannot directly access Docker’s internal network. 

# localhost/ -> frontend
# click login -> localhost/api
# localhost/api -> http://localhost/oauth2/authorization/google
# google sign in success -> http://localhost/login/oauth2/code/google
# google authorized origin: http://localhost:8008
# google redirect uri = http://localhost/login/oauth2/code/google

events {}

http {
    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            proxy_pass http://backend:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /oauth2/ {
            proxy_pass http://backend:8080/oauth2/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /login/oauth2/code/google {
            proxy_pass http://backend:8080/login/oauth2/code/google;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}


# PROD

# events {}

# http {
#     server {
#         listen 80;
#         server_name localhost;
#         # server_name oursearch.dedyn.io;

#         location / {
#             return 301 https://$host$request_uri;
#         }
#     }
#     server {
#         listen 443 ssl;
#         server_name localhost;
#         # server_name oursearch.dedyn.io;

#         ssl_certificate         /etc/letsencrypt/live/oursearch.dedyn.io/fullchain.pem;
#         ssl_certificate_key     /etc/letsencrypt/live/oursearch.dedyn.io/privkey.pem;

#         location / { 
#             proxy_pass http://frontend:3000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         location /backend/ {
#             proxy_pass http://backend:8080;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }