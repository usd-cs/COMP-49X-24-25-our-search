services:
  db:
    container_name: our-db
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: forum
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 5

  frontend:
    container_name: our-frontend
    image: natjungquist/oursearch-frontend:amd64-latest #amd64 for VM, arm64 for Mac
    # build: # do this instead of image: if you dont want to pull from image repo
      # context: ./frontend
    environment:
      - REACT_APP_DOMAIN=${DOMAIN} # React does not expose DOMAIN from Docker Compose or shell environment unless it's prefixed with REACT_APP_.
    depends_on:
      - backend

  backend:
    container_name: our-backend
    image: natjungquist/oursearch-backend:amd64-latest #amd64 for VM, arm64 for Mac
    # build: # do this instead of image: if you dont want to pull from image repo
      # context: ./backend
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/forum
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - DOMAIN=${DOMAIN}
    depends_on:
      db:
        condition: service_healthy

  proxy:
    container_name: our-proxy
    image: nginx:latest
    ports:
      - "80:80" # http
      - "443:443" # https
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
    restart: always
    depends_on: 
      - frontend
      - backend

volumes:
  db_data: 
    external: false